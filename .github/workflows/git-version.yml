name: Auto Tag and Version

on:
  push:
    branches: 
      - "main"
      - "develop"
  workflow_dispatch:

permissions:
   actions: write
   checks: write
   contents: write
   deployments: write
   issues: write
   packages: write
   pull-requests: write
   repository-projects: write
   security-events: write
   statuses: write

jobs:
  git_version:
    name: Determine current version
    runs-on: macos-15
    outputs:
      semVer: ${{ steps.gitversion.outputs.semVer }}
      majorMinorPatch: ${{ steps.gitversion.outputs.majorMinorPatch }}
      preReleaseTag: ${{ steps.gitversion.outputs.preReleaseTag }}
      preReleaseNumber: ${{ steps.gitversion.outputs.preReleaseNumber }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '16.1'

    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0
      with:
        versionSpec: '5.x'

    - name: Determine Version
      id: gitversion
      uses: gittools/actions/gitversion/execute@v0

    - name: Display GitVersion
      run: |
        if [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
          # For develop branch, create alpha tag
          # Get the current alpha version count
          CURRENT_VERSION="${{ steps.gitversion.outputs.majorMinorPatch }}"
          ALPHA_COUNT=$(git tag -l "${CURRENT_VERSION}-alpha.*" | wc -l | xargs)
          ALPHA_COUNT=$((ALPHA_COUNT + 1))
          NEW_TAG="${CURRENT_VERSION}-alpha.${ALPHA_COUNT}"
        else
          NEW_TAG="${{ steps.gitversion.outputs.semVer }}"
        fi
        echo "Semantic Version: $NEW_TAG"
        echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV

  update_podspec:
    name: Update podspec
    # Only update podspec for main branch
    if: contains(github.ref, 'refs/heads/main')
    needs: git_version
    runs-on: ubuntu-latest
    steps:
    
    - name: Checkout
      uses: actions/checkout@v4

    - name: Display version
      run: |
        PODSPEC_VERSION=$(grep -E "s\.version\s*=" DebugSwift.podspec | awk -F\' '{print $2}')
        echo "PODSPEC_VERSION=$PODSPEC_VERSION" >> $GITHUB_ENV
        echo Current version: '${{ needs.git_version.outputs.majorMinorPatch }}'
        echo Podspec version: "$PODSPEC_VERSION"

    - name: Update version
      run: |
        VERSION='${{ needs.git_version.outputs.majorMinorPatch }}'

        if [ "$PODSPEC_VERSION" == "$VERSION" ]; then
          echo Podspec version is updated.
        else
          echo Updating Podspec version...
          PODSPEC_FILE="DebugSwift.podspec"
          sed -i -E "s/(s\.version *= *')([^']+)(.*)/\1$VERSION\3/g" "$PODSPEC_FILE"

          git restore Example/Pods/Pods.xcodeproj/project.pbxproj

          echo Committing and pushing...
          git config user.name "GitHub Actions"
          git config user.email "github-actions@users.noreply.github.com"

          git add "$PODSPEC_FILE"
          git commit -m 'feat: Update Podspec version'
          git push
        fi
        
    - name: Publish Artifact
      uses: actions/upload-artifact@v4
      with:
        name: artifact
        path: DebugSwift.podspec

  tag:
    name: Create tag
    needs: 
      - git_version
    runs-on: ubuntu-latest

    steps:

    - name: Checkout
      uses: actions/checkout@v4

    - name: Push Git Tag
      run: |
        git config user.name "GitHub Actions"
        git config user.email "github-actions@users.noreply.github.com"
        
        if [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
          # For develop branch, create alpha tag
          CURRENT_VERSION="${{ needs.git_version.outputs.majorMinorPatch }}"
          # Fetch all tags to ensure we have the latest
          git fetch --tags
          ALPHA_COUNT=$(git tag -l "${CURRENT_VERSION}-alpha.*" | wc -l | xargs)
          ALPHA_COUNT=$((ALPHA_COUNT + 1))
          TAG_NAME="${CURRENT_VERSION}-alpha.${ALPHA_COUNT}"
        else
          TAG_NAME="${{ needs.git_version.outputs.semVer }}"
        fi
        
        git tag $TAG_NAME
        git push origin $TAG_NAME

  # Removed the release job as releases should be done manually for main branch
  # The latest_release job is also removed as it's only needed for automatic releases

  publish_pod:
    name: Publish pod
    # Only publish pod for main branch releases (not for develop/alpha tags)
    if: contains(github.ref, 'refs/heads/main') && github.event_name == 'workflow_dispatch'
    needs: 
      - tag
    runs-on: macos-latest
    steps:
    
    - name: Checkout
      uses: actions/checkout@v4

    - name: Publish Pod
      run: |
        pod trunk push DebugSwift.podspec --allow-warnings
      env:
        COCOAPODS_TRUNK_TOKEN: ${{ secrets.COCOAPODS_TRUNK_TOKEN }}
    # - run: "pod trunk me clean-sessions --all"
    
