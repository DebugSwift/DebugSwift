name: Manual Release

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag name for the release (e.g., v1.0.0)'
        required: true
      release_name:
        description: 'Release name'
        required: true
      is_prerelease:
        description: 'Is this a pre-release?'
        required: false
        default: 'false'
        type: choice
        options:
          - 'true'
          - 'false'

permissions:
   contents: write

jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v4

    - name: Get latest release
      uses: octokit/request-action@v2.x
      id: get_release
      continue-on-error: true
      with:
        route: GET /repos/:repository/releases/latest
        repository: ${{ github.repository }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract previous tag
      id: previous_tag
      run: |
        if [ "${{ steps.get_release.outcome }}" == "success" ]; then
          json='${{ steps.get_release.outputs.data }}'
          tag=$(echo "$json" | grep -o '"tag_name": *"[^"]*"' | awk -F'"' '{print $4}')
          echo "PREVIOUS_TAG=$tag" >> $GITHUB_OUTPUT
        else
          echo "PREVIOUS_TAG=" >> $GITHUB_OUTPUT
        fi

    - name: Extract version from tag
      id: extract_version
      run: |
        TAG_NAME="${{ github.event.inputs.tag_name }}"
        # Remove 'v' prefix if present
        VERSION=$(echo "$TAG_NAME" | sed 's/^v//')
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "Extracted version: $VERSION"

    - name: Update podspec version
      run: |
        VERSION="${{ steps.extract_version.outputs.VERSION }}"
        echo "Updating podspec version to: $VERSION"
        
        # Update the version in DebugSwift.podspec
        sed -i "s/s\.version.*=.*/s.version          = '$VERSION'/" DebugSwift.podspec
        
        # Verify the change
        grep "s.version" DebugSwift.podspec

    - name: Commit podspec changes
      run: |
        git config user.name "GitHub Actions"
        git config user.email "github-actions@users.noreply.github.com"
        
        VERSION="${{ steps.extract_version.outputs.VERSION }}"
        
        # For manual releases, we just update the podspec for the artifact
        # The commit will be made separately if needed
        echo "Podspec updated to version $VERSION for manual release"
        echo "Skipping commit for manual release workflow"
      
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.event.inputs.tag_name }}
        release_name: ${{ github.event.inputs.release_name }}
        body: |
          ${{ steps.previous_tag.outputs.PREVIOUS_TAG && format('Full changelog: [{0}...{1}](https://github.com/{2}/compare/{0}...{1})', steps.previous_tag.outputs.PREVIOUS_TAG, github.event.inputs.tag_name, github.repository) || 'Initial release' }}
        draft: false
        prerelease: ${{ github.event.inputs.is_prerelease == 'true' }}

    - name: Upload podspec artifact
      uses: actions/upload-artifact@v4
      with:
        name: artifact
        path: DebugSwift.podspec

  publish_pod:
    name: Publish pod
    needs: 
      - create_release
    runs-on: macos-latest
    steps:
    
    - name: Checkout
      uses: actions/checkout@v4

    - name: Delete old Podspec
      run: |
        if [ -e DebugSwift.podspec ]; then
          rm DebugSwift.podspec
        fi

    - name: Download Artifact
      uses: actions/download-artifact@v4
      with:
        name: artifact

    - run: "pod trunk push DebugSwift.podspec --allow-warnings"
      env:
        COCOAPODS_TRUNK_TOKEN: ${{ secrets.COCOAPODS_TRUNK_TOKEN }}
    # - run: "pod trunk me clean-sessions --all" 